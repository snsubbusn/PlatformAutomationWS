package com.objects_pages;

import org.openqa.selenium.Keys;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;

import com.controller.Action_Method;

public class WSAdminProxyPage extends Action_Method {

	//Elements of WS Admin Proxy page.
	@FindBy(xpath="//a[contains(text(),'Proxy')]")
	WebElement proxyTab;
	
	@FindBy(xpath="//button/span[contains(text(),'Got it!')]")
	WebElement cookieMsg;
	
	@FindBy(xpath="//div[@class='mat-select-arrow']")
	WebElement itemPerPage;
	
	@FindBy(xpath="(//span[@class='mat-option-text'])[1]")
	WebElement selectItem;
	
	@FindBy(xpath="(//span[@class='mat-option-text'])[2]")
	WebElement item32PerPage;
	
	@FindBy(xpath="(//div[@class='corporate-name'])[1]")
	WebElement firstProxyCard;
	
	@FindBy(xpath="//a[@class='mat-tab-link mat-tab-label-active ng-star-inserted']")
	WebElement proxyCorpTab;
	
	@FindBy(xpath="//button[@class='back-btn mat-button ng-star-inserted']")
	WebElement backButton;
	
	@FindBy(xpath="//span[@class='mat-option-text' and text()=16]")
	WebElement defaultItemValue;
	
	@FindBy(xpath="//span[@class='pagination-bottom']")
	WebElement paginationBottom;
	
	@FindBy(xpath="//li/a[@title='Go to last page']")
	WebElement lastPage;
	
	@FindBy(xpath="//li/a[@class='arrow'  and @title='Go to first page']")
	WebElement firstPage;
	
	
	public boolean acceptCookie()
	{
		cookieMsg.click();
		return true;
	}
	
	public boolean clickonProxy() {
		try {
			proxyTab.click();
			return true;
		}
		catch(Exception e) {
			return false;
		}
		
	}
	
	public boolean verifyProxyCard()
	{ 	try {
		paginationBottom.isDisplayed();
		return true;
	}catch(Exception e) {
		return false;
	} }
	
	public boolean ClickOn_ItemsPerPage()
	{
		itemPerPage.click();
		selectItem.click();
		return true;
	}
	
	public boolean verifyPagination()
	{
		paginationBottom.isDisplayed();
		return true;
	}
	
	public String getDefaultItemsPerPage()
	{
		//DefaultItemValue.click();(items per page and pagination scripts make separate functions)
		String rec = paginationBottom.getText();
		String [] recd = rec.split(" ");
		return recd[3];
	}
	
	public Boolean select32ItemsPerPage() {
		//proxyTab.sendKeys(Keys.ESCAPE);
		itemPerPage.click();
		item32PerPage.click();
		return true;
	}
	
	public String getTotalRecordsofthePage() {
		String rec = paginationBottom.getText();
		String [] recd = rec.split(" ");
		return recd[5];
	}
	
	public boolean verifyLastPageEnabled() {
		try{
			//lastPage.click();
			return lastPage.isEnabled();
		}catch(Exception e) {
			return false;
		}
	}

	public boolean verifyFirstPageEnabled() {
		try{
			return firstPage.isEnabled();
		}catch(Exception e) {
			return false;
		}
	}
	
	public String getFirstProxyCard() {
		return firstProxyCard.getText();
	}
	
	public boolean clickOnFirstProxyCard() {
		firstProxyCard.click();
		return true;
	}
	
	public String getProxyCorpTab() {
		return proxyCorpTab.getText();	
	}
	
	public boolean clickOnBackButton() {
		backButton.click();
		//proxyTab.getText();
		return true;
	}
	
	public String ProxyCorpTab() {
		return proxyTab.getText();
	}
	
}
-----------------------------------------------------------------

package com.scenarios;

import org.openqa.selenium.support.PageFactory;

import com.controller.Action_Method;
import com.controller.Variables;
import com.objects_pages.WSAdminGenPage;
import com.objects_pages.WSAdminProxyPage;
import com.objects_pages.loginPage;
import com.relevantcodes.extentreports.LogStatus;

public class WSAdm_TC023_VerifyProxyTabofWSAdmin extends Action_Method {
	public void verifyProxyPage() throws InterruptedException {
		
		logger = extent.startTest("WSAdm_TC023_VerifyProxyTabofWSAdmin");
		logger.assignAuthor("Keerthana");
		logger.assignCategory("WSAdmin General");

		logger.setDescription("WS Admin Logs in and click on proxy and verify the items per page default value and  verify the total count of proxy corporate cards  displayed matches with the selected value and also verifies pagination for proxy.");


		wait_for_pageload(Variables.url);
		logger.log(LogStatus.PASS, "Launched the URL and the Login Page is displayed");
		
		loginPage lp=PageFactory.initElements(driver,loginPage.class);
		
		WSAdminProxyPage ws = PageFactory.initElements(driver, WSAdminProxyPage.class);
		ws.acceptCookie();
		
		lp.EnterValidLogin(Variables.testdata,Variables.LoginPage,"Admin Email","AdminPassword");
		logger.log(LogStatus.PASS, "Enter valid login credential and click on Login button,Admin Landing page displayed");
		
		logger.log(LogStatus.PASS, "Click on \"Proxy\" Tab");
		 
		Thread.sleep(6000);
		if(ws.clickonProxy()) {
			logger.log(LogStatus.PASS, "Proxy Page is displayed successfully");
		}
		else {
			logger.log(LogStatus.FAIL, "Failed to Navigate to \"Proxy \" page.");
		}
		
		if(!ws.verifyProxyCard()) {
			logger.log(LogStatus.FAIL,"No proxy corporate cards are viewed");
		} else {		
			logger.log(LogStatus.PASS, "proxy corporate cards are viewed");
			
			if(ws.ClickOn_ItemsPerPage()) {
				logger.log(LogStatus.PASS, "Items per page drop down is displayed successfully");
			}else {
				logger.log(LogStatus.FAIL, "Failed to display drop down of Items per page.");
			}
			
			if(ws.verifyPagination())
			{	
				logger.log(LogStatus.PASS, "Pagination is displayed successfully");
			}else {
				logger.log(LogStatus.FAIL, "Failed to display pagination.");
			}
			
			String defItem = ws.getDefaultItemsPerPage();

			logger.log(LogStatus.PASS, "Default Item value displayed is"+defItem+" from Items per page drop down");
			
			if(!defItem.isEmpty()) {
				logger.log(LogStatus.PASS, "There are "+defItem+" corporate cards in the \"Proxy \" Page");
			}
			else {
				logger.log(LogStatus.FAIL, "Failed to display default  Item from  drop down of Items per page.");
			}
			
			if(ws.select32ItemsPerPage()) {
				logger.log(LogStatus.PASS, "32 is selected as item value in drop down of items per page in the \"Proxy \" Page");
				
				String rec = ws.getTotalRecordsofthePage();
				
				if(!rec.isEmpty()) {
					logger.log(LogStatus.PASS, "There are "+rec+" corporate cards in the \"Proxy \" Page");
				}
			}
			else {
				logger.log(LogStatus.FAIL, "There are no records in the \"Proxy \" page");
			}
			
			if(ws.verifyLastPageEnabled()) {
				logger.log(LogStatus.PASS, "Verified the  Last Page button are enabled and accessible");
			}else {
				logger.log(LogStatus.FAIL, " Last Page button is not enabled and so cannot navigate to next page");
			} 
			
			if(ws.verifyFirstPageEnabled() ) {
				logger.log(LogStatus.PASS, "Verified first page button is enabled and accessible");
			}else {
				logger.log(LogStatus.FAIL, "first Page button is not enabled and so cannot navigate to next page");
			} 
			
		}
		
		logger.log(LogStatus.INFO,"Verified the WS Admin Login and Proxy Page details");
		extent.endTest(logger);
		
		lp.logout();
		
	}

}
---------------------------------------------------------------

package com.scenarios;

import org.openqa.selenium.support.PageFactory;

import com.controller.Action_Method;
import com.controller.Variables;
import com.objects_pages.WSAdminProxyPage;
import com.objects_pages.loginPage;
import com.relevantcodes.extentreports.LogStatus;

public class WSAdm_TC024_VerifytheAdminSelectsTheCorporateAndExitProxy extends Action_Method {

	public  void verifyProxyEntryExit() throws InterruptedException {

		logger = extent.startTest("WSAdm_TC024_VerifytheAdminSelectsTheCorporateAndExitProxy");
		logger.assignAuthor("Keerthana");
		logger.assignCategory("WSAdmin General");

		logger.setDescription("WS Admin Logs in and click on proxy and verify the proxy page and clicks on any proxy corporate card and clicks on back button,verifies the navigation of pages.");


		wait_for_pageload(Variables.url);
		logger.log(LogStatus.PASS, "Launched the URL and the Login Page is displayed");
		
		loginPage lp=PageFactory.initElements(driver,loginPage.class);
		
		WSAdminProxyPage ws = PageFactory.initElements(driver, WSAdminProxyPage.class);
		ws.acceptCookie();
		
		lp.EnterValidLogin(Variables.testdata,Variables.LoginPage,"Admin Email","AdminPassword");
		logger.log(LogStatus.PASS, "Enter valid login credential and click on Login button,Admin Landing page displayed");
		
		logger.log(LogStatus.PASS, "Click on \"Proxy\" Tab");
		 
		Thread.sleep(6000);
		if(ws.clickonProxy()) {
			logger.log(LogStatus.PASS, "Proxy Page is displayed successfully");
		}
		else {
			logger.log(LogStatus.FAIL, "Failed to Navigate to \"Proxy \" page.");
		}
		
		if(!ws.verifyProxyCard()) {
			logger.log(LogStatus.FAIL,"No proxy corporate cards are viewed");
		} else {		
			logger.log(LogStatus.PASS, "proxy corporate cards are viewed");
		
			String corp = ws.getFirstProxyCard();
			
			if(ws.clickOnFirstProxyCard() ) {
				logger.log(LogStatus.PASS, "Successfully clicked on first proxy card and navigated to 'Active Jobs' page of that respective proxy");
			} else {
				logger.log(LogStatus.FAIL, "Failed to Navigate to Active Jobs page of the respective proxy.");
			}
			Thread.sleep(5000);
			String corpTab = ws.getProxyCorpTab() ; 
			
			if(corp.equalsIgnoreCase(corpTab)) {
				logger.log(LogStatus.PASS, "Successfully Active Jobs page displayed matches with the first proxy card  selected ");
			} else {
				logger.log(LogStatus.FAIL,"Failed to display the Active jobs page of the selected proxy corporate card");
			}
			
			if(ws.clickOnBackButton()) {
				logger.log(LogStatus.PASS,"Successfully clicked on back button");
			} else {		
				logger.log(LogStatus.FAIL, "Failed to navigate to proxy page");
			}
			Thread.sleep(5000);
			String pro = ws.getProxyCorpTab();
			
			if(pro.contains("Proxy")) {
				logger.log(LogStatus.PASS,"Successfully navigated to proxy page,clicked on back button.");
			}else {
				logger.log(LogStatus.FAIL,"Failed to navigate to proxy page");
			}
		
	}

		logger.log(LogStatus.INFO,"Verified the WS Admin Login and Proxy corporate Entry and Exit");
		extent.endTest(logger);
		
		lp.logout();
	}
}
